# English locale for the GTK GUI of the OpenRubyRMK.
# Everything should be encoded in UTF-8.

# General stuff needed at different places
general:
  application_name: "OpenRubyRMK (GTK frontend)"
  actions:
    import: "Import"
    export: "Export"
    rename: "Rename"
    delete: "Delete"
  layer_types:
    tile: "Tile layer"
    object: "Object layer"
    image: "Image layer"

# All the dialogue windows everywhere.
dialogs:
  new_project: "Create a new project"
  not_empty: "The directory %{dir} is not empty."
  dir_not_found: "The directory %{dir} couldn’t be found."
  file_not_found: "The file %{file} couldn’t be found."
  layer_name_taken: "The layer name “%{name}” is already taken."
  map_settings:
    name: "Map settings"
    labels:
      map_name: "Map name"
      # The "times" character below is actually
      # U+2715 MULTIPLICATION X.
      width_height: "Width ✕ Height"
    errors:
      map_name_empty: "The map name cannot be empty."
  categories:
    name: "Configure categories"
  category_settings:
    name: "Category settings"
    new_category_name: "New category"
    # The attribute name should not contain any whitespace.
    new_attribute_name: "NewAttribute"
    labels:
      name: "Name:"
      allowed_attributes: "Allowed attributes:"
      attribute_type: "Attribute type:"
      minimum_and_maximum: "Minimum and maximum values\n(for types “number” and “float”):"
      choices: "Possible comma-separated choices\n(for type “ident”):"
      attribute_description: "Attribute description:"
    errors:
      no_name: "No name given"
      no_attrs: "No attributes defined"
  delete_map: "Are you sure you want to delete the map “%{name}” (ID %{id})?"
  add_layer:
    title: "Add a new layer"
    message: "Choose the new layer’s type:"
    new_layer_name: "New layer"
  add_tileset:
    title: "Add tileset"
    no_tileset_selected: "No tileset selected."
  resources:
    name: "Resources"
    labels:
      categories: "Categories"
      resources: "Resources"
      actions: "Actions"
      details: "Details"
      new_category: "New Category"
      more: "More…"
      license: "License"
      copyright_year: "Copyright year"
      copyright_holder: "Copyright holder"
  resource_preview:
    title: "Resource preview"
  settings:
    title: "Settings"
    labels:
      general:
        title: "General"
        name: "Name"
        descr: "Description"
        base_path: "Project-Path"
      detailed:
        title: "Game Design Outline"
        concept: "Basic Concept"
        story: "Backgroundstory"
        objective: "Objective"
        gameplay: "Gameplay"
        intro: "Intro"
        additonal: "Additonal Informations"
      product_design:
        title: "Product Design"
        characters: "Charakters"
        world: "World"
        controls: "Controls"
        interface: "Interface"
        sound: "Soundeffects"
    hints:
      detailed:
        concept: "What makes your game special. What overall concept does it have?\n (Maybe famous examples?)"
        story: "If it's an RPG: How does your adventure begin?\n What will happen during the game?"
        objective: "What is the player's goal and why would they want to accomplish it?"
        gameplay: "How does the game works (maybe the well-known run-around-and-fight-in-a-special-turnbased-combat-screen type)?\n Are there Levels or Chapters or is it OpenWorld?"
        intro: "Is there a (animated) title screen?\n Are there any options available?\n What happens by 'starting a new game': Any video or text explaining your goal?"
        additonal: "All the additonal stuff not mentioned before. (e.g.: Gamedifficulty or Average playtime)"
      product_design:
        characters: "Who are the main charakters? (role in story, skills, their own story)"
        world: "Which scene(s) are out there, waiting to be explored?\nHow does the world looks like?\nAny historic relations?"
        controls: "Are there any special controls, like mouse-input, jumps or multitouch gestures?"
        interface: "How does the interface looks like. Any bars, displaying information?\nWhat kind of menu awaits the player?"
        sound: "Whats the general music-sound-usage concept.\nIs the whole game flavoured with random or scene-related background music?\nAre there sounds for skills, walking or events?\nWhat music style will be used?"
  package: "Select a target directory"

# Texts for the debugging console.
console:
  title: "Debugging console"
  # Note: Don’t make lines longer than 80 characters here,
  # this would break terminal text layout (this doesn’t
  # include the syntactic leading spaces).
  greeter: |
    OpenRubyRMK GTK %{frontendversion} @ backend %{backendversion}
    Copyright (C) %{copyrightyear} The OpenRubyRMK Team
    
    This program comes with ABSOLUTELY NO WARRANTY; for details see COPYING.
    This is free software, and you are welcome to redistribute it
    under certain conditions; see COPYING for details.

windows:
  map_tree:
    title: "Map tree"
    labels:
      map_name: "Map name"
      map_id: "Map ID"
  tileset:
    title: "Tileset"
    labels:
      rectangle: "Rectangle"
      magic: "Magic"
      freehand: "Freehand"

# Toolbar labels. Chances are you will never see them, because
# GTK+ doesn’t show these by default, you have to explicitely
# enable them in your GTK+ theme. Also, GNOME folks have thought
# about generally abandoning the symbol+text display style for
# toolbars.
tools:
  selection:
    rectangle: "Rectangle"
    magic: "Magic"
    freehand: "Freehand"
  editor:
    edit: "Edit"
    character: "Character"
    free: "Free"
  general:
    save: "Save project"
    open: "Open project"
    new: "New project"
  chartype:
    label: "Template: "

# Menu entries. Pro tip: Prefixing a letter with an underscore
# (_) makes that letter a so-called "mnemonic". These are generally
# underlined in the UI and allow to navigate the menus by only using
# the keyboard, i.e. [ALT]+<mnemonic> to activate an entry. Each
# menu entry should have such a mnemonic letter, and they should
# be unique within a submenu. You don’t have to copy the exact
# mnemonics from the English version for your translation, choose
# more apropriate ones.
menus:
  file:
    name: F_ile
    entries:
      new: Ne_w
      open: O_pen…
      recent_opened: "R_ecent Opened"
      save: Sav_e
      test: Test
      package: P_ackage…
      quit: _Quit
  edit:
    name: E_dit
    entries:
      resources: Re_ssources…
      project_settings: P_roject settings…
      categories: Cate_gories…
  view:
    name: _View
    entries:
      grid: Toggle _grid
  windows:
    name: _Windows
    entries:
      map_tree: "M_ap tree"
      console: "C_onsole"
      tileset: "T_ileset"
      layer: "L_ayer"
  help:
    name: _Help
    entries:
      about: A_bout…

# Special section for template names. These terms are
# used to translate template names mainly in the
# combobox for the template in the toolbar; they
# are looked up by the template’s #name attribute
# as the translation key. If no translation is found
# in the section below, that attribute is simply
# capitalized and then used directly.
templates:
  dummy: "Useless dummy"

# This section contains all the stuff that didn’t fit
# in anywhere else.
misc:
